#!/usr/bin/env ruby
require "pretty_table"

#Define methods
def addBrew()
  if `which brew` == ''
    puts 'You appear to be running MacOS without Homebrew installed.'
    puts "If you don\'t know what Homebrew is, visit 'brew.sh', if you do and would like to install it, type 'yes'. >> "
    userreply = gets.chomp
    userreply.downcase!
    until userselect == true
      if userreply == 'yes'
        Kernel.system "ruby -e '$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)'"
        userselect = true
      elsif userreply == 'no'
        puts "That\'s fine! Just keep in mind, the install, uninstall, and search commands won\'t work for you."
        userselect = true
      else
        puts 'Please say yes or no.'
      end
    end
  end
end

def installDeb(package)
  Kernel.system "sudo apt-get install #{package}"
  puts "\r"
  puts "I ran: 'sudo apt-get install #{package}'"
end
def installRpm(package)
  Kernel.system "sudo yum install #{package}"
  puts "\r"
  puts "I ran: 'sudo yum install #{package}'"
end
def installPac(package)
  Kernel.system "sudo pacman -S #{package}"
  puts "\r"
  puts "I ran: 'sudo pacman -S #{package}'"
  puts 'Shouldn\'t you know how to use pacman if you\'re using Arch? Just kidding.'
end
def installHb(package)
  Kernel.system "brew install #{package}"
  puts "\r"
  puts "I ran: 'brew install #{package}'"
end
def uninstallDeb(package)
  Kernel.system "sudo apt-get remove #{package}"
  puts "\r"
  puts "I ran: 'sudo apt-get remove #{package}'"
end
def uninstallRpm(package)
  Kernel.system "sudo yum uninstall #{package}"
  puts "\r"
  puts "I ran: 'sudo yum uninstall #{package}'"
end
def uninstallPac(package)
  Kernel.system "sudo pacman -R #{package}"
  puts "\r"
  puts "I ran: 'sudo pacman -R #{package}'"
  puts 'Shouldn\'t you know how to use pacman if you\'re using Arch? Just kidding.'
end
def uninstallHb(package)
  Kernel.system "brew uninstall #{package}"
  puts "\r"
  puts "I ran: 'brew uninstall #{package}'"
end
def searchDeb(package)
  Kernel.system "apt-cache search #{package}"
  puts "\r"
  puts "I ran: 'apt-cache search #{package}'"
end
def searchRpm(package)
  Kernel.system "yum search #{package}"
  puts "\r"
  puts "I ran: 'yum search #{package}'"
end
def searchPac(package)
  Kernel.system "pacman -Ss #{package}"
  puts "\r"
  puts "I ran: 'pacman -Ss #{package}'"
  puts 'Shouldn\'t you know how to use pacman if you\'re using Arch? Just kidding.'
end
def searchHb(package)
  Kernel.system "brew search #{package}"
  puts "\r"
  puts "I ran: 'brew search #{package}'"
end

#Detect OS 
osRaw = `uname -a`
osRaw.downcase!
osLin = osRaw.split(' ')[5]
osDar = osRaw.split(' ')[3]
if osDar == 'darwin' then addBrew() end

#Start Program
puts ' '
runOnce = false
exitis  = 0
while exitis == 0 do
  if runOnce == true then puts "\r" end
  print "Type 'help' to list possible commands. >> "
  userCommand = gets.chomp
  userCommand.downcase!

  case userCommand
  #Package management
  when 'install'
    print 'Please enter the name of the program you\'d like to install. >> '
    package = gets.chomp
    package.downcase!
    case oslin
    when 'ubuntu'
      installDeb(package)
    when 'debian'
      installDeb(package)
    when 'linux mint'
      installDeb(package)
    when 'redhat'
       installRpm(package)
    when 'fedora'
       installRpm(package)
    when 'open suse'
        installRpm(package)
    when 'arch'
       installPac(package)
    else
       if osdar == 'darwin'
         installHb(package)
       else
          print "\r"
          puts 'Sorry, I didn\'t recognize you\'re operating system.'
        end
    end
    runOnce = true
  when 'uninstall'
    print 'Please enter the name of the program you\'d like to remove. >> '
    package = gets.chomp
    package.downcase
    case oslin
    when 'ubuntu'
      uninstallDeb(package)
    when 'debian'
      uninstallDeb(package)
    when 'linux mint'
      uninstallDeb(package)
    when 'redhat'
       uninstallRpm(package)
    when 'fedora'
       uninstallRpm(package)
    when 'open suse'
        uninstallRpm(package)
    when 'arch'
       uninstallPac(package)
    else
      if osdar == 'darwin'
        uninstallHb(package)
      else
         print "\r"
         puts 'Sorry, I didn\'t recognize you\'re operating system.'
       end
     end
     runOnce = true
   when 'search'
     print 'Please enter the name of the program you\'d like to search for. >> '
     package = gets.chomp
     package.downcase!
     case oslin
     when 'ubuntu'
       searchDeb(package)
     when 'debian'
       searchDeb(package)
     when 'linux mint'
       searchDeb(package)
     when 'redhat'
        searchRpm(package)
     when 'fedora'
        searchRpm(package)
     when 'open suse'
         searchRpm(package)
     when 'arch'
        searchPac(package)
     else
       if osdar == 'darwin'
         searchHb(package)
       else
          print "\r"
          puts 'Sorry, I didn\'t recognize you\'re operating system.'
        end
      end
     runOnce = true
  #File/folder manipulation
  when 'copy'
    print 'Please enter the path to the file (e.g. Downloads/report.doc) >> '
    cpfile = gets.chomp
    puts ' '
    print 'Please enter the destination inclduding the name of the file (e.g. Documents/report.doc) >> '
    cpdest = gets.chomp
    Kernel.system "cp -avr #{cpfile} #{cpdest}"
    puts "\r"
    puts "I ran: 'cp #{cpfile} #{cpdest}'"
    runOnce = true
  when 'rename'
    print 'Please enter the path to the file (e.g. Documents/report.doc). >> '
    cpfile = gets.chomp
    puts ' '
    print 'Please enter the new name inclduding the destination you used earlier (e.g. Documents/Essay.doc). >> '
    cpdest = gets.chomp
    Kernel.system "cp #{cpfile} #{cpdest}"
    puts "\r"
    puts "I ran: 'cp #{cpfile} #{cpdest}'"
    runOnce = true
  when 'delete file'
    print 'Please enter the name of the file you\'d like to remove along with its directory (e.g. Documents/sensitive.doc). >> '
    file = gets.chomp
    Kernel.system "rm #{file}"
    puts "\r"
    puts "I ran: 'rm #{file}'"
    runOnce = true
  when 'delete folder'
    print 'Please enter the name of the folder you\'d like to remove along with its directory (e.g. Garbage/, Documents/Garbage/). >> '
    folder = gets.chomp
    Kernel.system "rm -R -i #{folder}"
    puts "\r"
    puts "I ran: 'rm -R -i #{folder}'"
    runOnce = true
  when 'create file'
    print 'Please name your new file along with its directory (e.g. Documents/newfile.doc). >> '
    file = gets.chomp
    Kernel.system "touch #{file}"
    puts "\r"
    puts "I ran: 'touch #{file}'"
    runOnce = true
#The folowing code is broken for now. Disregard it.
=begin when 'change working folder'
    print 'Please enter the name of the folder you like to switch to (e.g. Documents/Folder). >> '
    folder = gets.chomp
    Kernel.system "cd #{folder}"
   puts "I ran: 'cd #{file}'"

  when 'list files'
    print 'Please enter the folder you\'d like to list files in (e.g. Documents). >> '
    folder = gets.chomp
    Kernel.system "ls #{folder} --color=auto"
    puts "\r"
    puts "I ran: 'ls #{folder}'"
=end

#The following code is broken for now. Disregard it.
=begin
  when 'edit file'
    print 'Please enter the name and location of the file you\'d like to edit (e.g. Documents/report.doc). >> '
    file = gets.chomp
    Kernel.system "nano #{file}"
    puts "\r"
    puts "I ran: 'nano #{file}'"
=end
  when "compile"
    print 'Please enter the location of the c++ code you\'d like to compile (e.g. Projects/helloworld.cpp). '
    code = gets.chomp
    print 'Please enter the name you\'d like to give your compiled program. '
    name = gets.chomp
    Kernel.system "g++ -o #{name} #{code}"
    puts "I ran: 'g++ -o #{name} #{code}'."
  when "run c++ program"
    print 'Please enter the folder your program is contained in (e.g. Documents, Projects/myfantsticproject, etc.). '
    folder = gets.chomp
    print 'Please enter the name of your compiled program (e.g. helloworld, test, etc.). '
    program = gets.chomp
    Kernel.system "#{folder}./#{program}"
  when 'help'
    headers = [ 'Command', 'Action']
    commands = [
      ["install", "install new programs or 'packages' on your system"],
      ["uninstall", "remove programs or 'packages' from your system"],
      ["search", "search for a program that can be installed with the aforementioned 'install' command"],
      ["copy", "copies a file or folder to another place"],
      ["rename", "renames a file on your computer"],
      ["delete file", "deletes a file on your compter"],
      ["delete folder", "deletes a folder on your computer (type yes at every promt)."],
      ["create file", "creates an empty text file on your computer (.rb, .py, .java, etc. count as text files)"],
      ["change working folder", "change the folder you\'ll be working in (e.g. Documents)"],
      ["list files", "list all of the files in a given folder (e.g. Downloads)"],
      ["compile", "compiles a c++ file (e.g. foo.cpp)"],
      ["run c++ program", "runs a c++ program compiled with the aforementioned command"],
      ["exit", "exits ezbash"] ]
#   puts "\t edit file: edits a text file in a bare-bones, quick editor (.rb, .html, .java, etc. count as text files)"
#   puts "\r"
      puts PrettyTable.new(commands, headers).to_s
      puts "\r"
  when 'exit'
    abort
  else
    puts 'Sorry, I didn\'t catch that.'
  end
end
